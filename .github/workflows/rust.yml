name: Rust

on:
  push:
    branches: [ "main", "develop" ] 
  pull_request:
    branches: [ "main", "develop" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose

  unit-tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run unit tests
      run: cargo test --verbose --all-features

  clippy-check:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Clippy
      run: rustup component add clippy
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Run Rustfmt
      run: cargo fmt --all -- --check

  build-all-targets:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [
          "x86_64-unknown-linux-gnu",
          "aarch64-unknown-linux-musl",
          "x86_64-pc-windows-gnu",
        ]
    steps:
      - uses: actions/checkout@v4
      # Install Rust toolchain and target
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      # Build for target
      - name: Build for ${{ matrix.target }}
        run: cargo build --release --target ${{ matrix.target }} --verbose

      # Upload artifact
      - name: Upload artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/
          if-no-files-found: error
          retention-days: 7